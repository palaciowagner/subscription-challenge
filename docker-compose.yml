version: '3.7'

services:
  proxy:
    image: nginx:alpine
    container_name: proxy
    ports:
      - '90:90'
      - '91:91'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: 'unless-stopped'
    networks:
      - public
      - private
  subscription_core:
    build:
      context: ./subscription-core
      target: development-build-stage
      dockerfile: Dockerfile
    container_name: subscription_core
    ports:
      - '3000:3000'
    volumes:
      - ./subscription-core:/app
      - /app/node_modules
    restart: 'unless-stopped'
    networks:
      - private
    links:
      - pg
    depends_on:
      pg:
        condition: service_healthy

  subscription_bff:
    build:
      context: ./subscription-bff
      target: development-build-stage
      dockerfile: Dockerfile
    container_name: subscription_bff
    ports:
      - '5000:5000'
    volumes:
      - ./subscription-bff:/app
      - /app/node_modules
    restart: 'unless-stopped'
    networks:
      - public

  pg:
    image: bitnami/postgresql:11-debian-10
    container_name: pg
    environment:
      POSTGRESQL_USERNAME: root
      POSTGRESQL_PASSWORD: password
      POSTGRESQL_DATABASE: test
    ports:
      - '5432:5432'
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - private

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - private

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - private

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - private

networks:
  public:
    driver: bridge
  private:
    driver: bridge

volumes:
  data:
    driver: local
  database:
